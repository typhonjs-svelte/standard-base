{"version":3,"file":"index.js","sources":["../../../src/application/menu/TJSContextMenu.js"],"sourcesContent":["import { getEasingFunc }      from '#runtime/svelte/easing';\nimport { TJSSvelte }          from '#runtime/svelte/util';\nimport { A11yHelper }         from '#runtime/util/a11y';\nimport { AssetValidator }     from '#runtime/util/browser';\nimport { ThemeObserver }      from '#runtime/util/dom/theme';\nimport { CrossWindow }        from '#runtime/util/browser';\n\nimport {\n   isIterable,\n   isObject }                 from '#runtime/util/object';\n\nimport { TJSContextMenuImpl } from '#standard/component/menu';\n\n/**\n * Provides and manages browser window wide context menu functionality. The best way to create a context menu is to\n * attach the source KeyboardEvent or MouseEvent / PointerEvent as data in {@link TJSContextMenu.create}. This allows\n * proper keyboard handling across browsers supporting the context menu key. A A11yFocusSource data object is generated\n * which allows tracking of the source element that triggered the context menu allowing focus to return to the source\n * when the context menu is closed. This A11yFocusSource object is also forwarded on through the `onPress` callback and\n * is intended to be supplied as `SvelteApplication` options particularly for modal dialogs allowing focus to return\n * to the original source after the modal dialog is closed.\n */\nexport class TJSContextMenu\n{\n   /**\n    * Stores any active context menu.\n    */\n   static #contextMenu = void 0;\n\n   /**\n    * @hideconstructor\n    */\n   constructor()\n   {\n      throw new Error('TJSContextMenu constructor: This is a static class and should not be constructed.');\n   }\n\n   /**\n    * Creates and manages a browser wide context menu. The best way to create the context menu is to pass in the source\n    * DOM event as it is processed for the location of the context menu to display. Likewise, an A11yFocusSource object\n    * is generated that allows focus to be returned to the source location. You may supply a default focus target as a\n    * fallback via `focusEl`.\n    *\n    * @param {object}      opts - Optional parameters.\n    *\n    * @param {PointerEvent | MouseEvent | KeyboardEvent}  [opts.event] - The source PointerEvent, MouseEvent or\n    *        KeyboardEvent. It is highly recommended to pass the originating DOM event for automatic configuration.\n    *\n    * @param {(\n    *    Iterable<import('#standard/component/menu').TJSMenuData.Items> |\n    *    (() => Iterable<import('#standard/component/menu').TJSMenuData.Items>)\n    * )} [opts.items] - Menu items list of function returning a menu item list to display.\n    *\n    * @param {number}      [opts.x] - X position override for the top / left of the menu.\n    *\n    * @param {number}      [opts.y] - Y position override for the top / left of the menu.\n    *\n    * @param {number}      [opts.offsetX=2] - Small positive number offset for context menu so the pointer / mouse is\n    *        over the menu on display.\n    *\n    * @param {number}      [opts.offsetY=2] - Small positive number offset for context menu so the pointer / mouse is\n    *        over the menu on display.\n    *\n    * @param {boolean}     [opts.anchorToEventTarget=false] - Align context menu to the `event.target` element. This\n    *        will usually display the context menu aligned at the bottom left of the target element with automatic\n    *        alignment adjustments when the menu opens to the left or upwards.\n    *\n    * @param {Iterable<string>}    [opts.classes] - Additional custom CSS classes to add to the menu. This allows CSS\n    *        style targeting.\n    *\n    * @param {boolean}     [opts.focusDebug] - When true the associated A11yFocusSource object will log focus target\n    *        data when applied.\n    *\n    * @param {HTMLElement|string} [opts.focusEl] - A specific HTMLElement or selector string as the default focus\n    *        target.\n    *\n    * @param {string}      [opts.keyCode='Enter'] - Key to select menu items.\n    *\n    * @param {string}      [opts.id] - A custom CSS ID to add to the menu. This allows CSS style targeting.\n    *\n    * @param {Function}    [opts.onClose] - A function that is invoked when the context menu is closed. Useful for any\n    *        state based changes such as CSS highlighting of context menu invoking element.\n    *\n    * @param {boolean}     [opts.onPressApplyFocus=false] When true, any focus source derived from the associated\n    *        `event` or defined `focusEl` is applied automatically in response to menu item presses.\n    *\n    * @param {{ [key: string]: string | null }}  [opts.styles] - Optional inline styles to apply.\n    *\n    * @param {number}      [opts.duration] - Transition option for duration of transition in milliseconds;\n    *        default: `120ms`.\n    *\n    * @param {import('#runtime/svelte/easing').EasingReference}   [opts.easing] - Transition option for ease. Either an\n    *        easing function or easing function name.\n    *\n    * @param {Window}      [opts.activeWindow] - The active browser window that the context menu is displaying inside.\n    *        When you pass an `event` this is determined automatically.\n    */\n   static create({ event, items, x, y, offsetX = 2, offsetY = 2, anchorToEventTarget = false, classes = [],\n    focusDebug = false, focusEl, keyCode = 'Enter', id = '', onClose, onPressApplyFocus = false, styles, duration = 120,\n     easing, activeWindow })\n   {\n      if (TJSContextMenu.#contextMenu !== void 0) { return; }\n\n      // Perform duck typing on event constructor name.\n      if (event !== void 0 && !CrossWindow.isUserInputEvent(event))\n      {\n         throw new TypeError(\n          `TJSContextMenu.create error: 'event' is not a KeyboardEvent, MouseEvent, or PointerEvent.`);\n      }\n\n      if (!event && (typeof x !== 'number' || typeof y !== 'number'))\n      {\n         throw new Error(`TJSContextMenu.create error: No event or absolute X / Y position not defined.`);\n      }\n\n      if (typeof anchorToEventTarget !== 'boolean')\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'anchorToEventTarget' is not a boolean.`);\n      }\n\n      if (anchorToEventTarget === true && !event)\n      {\n         throw new TypeError(\n          `TJSContextMenu.create error: 'anchorToEventTarget' when 'true' requires 'event' to be defined.`);\n      }\n\n      if (Number.isFinite(offsetX) && offsetX < 0)\n      {\n         throw new TypeError(`TJSContextMenu.create error: offsetX is not a positive number.`);\n      }\n\n      if (Number.isFinite(offsetY) && offsetY < 0)\n      {\n         throw new TypeError(`TJSContextMenu.create error: offsetY is not a positive number.`);\n      }\n\n      if (!Number.isInteger(duration) || duration < 0)\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'duration' is not a positive integer.`);\n      }\n\n      // If `activeWindow` is not defined determine it from the given event.\n      if (activeWindow === void 0 && event !== void 0) { activeWindow = CrossWindow.getWindow(event); }\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'activeWindow' is not a Window.`);\n      }\n\n      if (typeof id !== 'string')\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'id' is not a string.`);\n      }\n\n      if (onClose !== void 0 && typeof onClose !== 'function')\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'onClose' is not a function.`);\n      }\n\n      if (typeof onPressApplyFocus !== 'boolean')\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'onPressApplyFocus' is not a boolean.`);\n      }\n\n      if (!isIterable(classes))\n      {\n         throw new TypeError(`TJSContextMenu.create error: 'classes' is not a list of strings.`);\n      }\n\n      const processedItems = TJSContextMenu.#processItems(items);\n\n      // No applicable menu items. Abort showing the menu.\n      if (processedItems.length === 0) { return; }\n\n      const hasIcon = processedItems.some((entry) => entry['#type'] === 'font' || entry['#type'] === 'svg');\n\n      // Used for `anchorToEventTarget` storing target element width / height and defining `x / y` for bottom left\n      // positioning.\n      let targetElHeight = 0, targetElWidth = 0;\n\n      if (anchorToEventTarget)\n      {\n         ({ x, y, targetElHeight, targetElWidth } = this.#calcAnchorToEventTarget(event, activeWindow, x, y));\n      }\n\n      const focusSource = A11yHelper.getFocusSource({ event, x, y, focusEl, debug: focusDebug });\n\n      const easingFn = getEasingFunc(easing, { default: false });\n\n      // Retrieve any additional platform theme classes depending on event target.\n      const themedClasses = ThemeObserver.nearestThemedTokens({\n         element: event?.target,\n         output: new Set(classes),\n         override: false,\n         strict: true\n      });\n\n      // Create the new context menu with the last click x / y point.\n      TJSContextMenu.#contextMenu = new TJSContextMenuImpl({\n         target: activeWindow.document.body,\n         intro: true,\n         props: {\n            x: focusSource.x,\n            y: focusSource.y,\n            offsetX,\n            offsetY,\n            hasIcon,\n            items: processedItems,\n            classes: Array.from(themedClasses),\n            focusSource,\n            keyCode,\n            id,\n            styles,\n            transitionOptions: { duration, easing: easingFn },\n            activeWindow,\n            onPressApplyFocus,\n            targetElHeight,\n            targetElWidth\n         }\n      });\n\n      TJSContextMenu.#contextMenu.$set({ current_component: TJSContextMenu.#contextMenu });\n\n      // Register an event listener to remove any active context menu if closed from a menu selection or pointer\n      // down event to `document.body`.\n      TJSContextMenu.#contextMenu.$on('close:contextmenu', () =>\n      {\n         TJSContextMenu.#contextMenu = void 0;\n\n         if (typeof onClose === 'function') { onClose(); }\n      });\n   }\n\n   /**\n    * Find bottom / left viewport coordinates for current target element of event.\n    *\n    * @param {PointerEvent | MouseEvent | KeyboardEvent} event -\n    *\n    * @param {Window}   activeWindow -\n    *\n    * @param {number}   [x] -\n    *\n    * @param {number}   [y] -\n    *\n    * @returns {{ x: number, y: number, targetElHeight: number, targetElWidth: number }} X / Y viewport coordinates\n    *          aligned to the event target element bottom / left in addition to the target element height / width for\n    *          when the context menu is repositioned due to constraints.\n    */\n   static #calcAnchorToEventTarget(event, activeWindow, x, y)\n   {\n      let targetElHeight = 0, targetElWidth = 0, targetX, targetY;\n\n      const rect = (event?.currentTarget ?? event?.target)?.getBoundingClientRect?.();\n\n      if (rect)\n      {\n         targetX = rect.left + activeWindow.scrollX;\n         targetY = rect.bottom + activeWindow.scrollY;\n         targetElHeight = rect.height;\n         targetElWidth = rect.width;\n      }\n\n      // Allow any defined x / y to take precedence.\n      return { x: x ?? targetX, y: y ?? targetY, targetElHeight, targetElWidth };\n   }\n\n   /**\n    * Processes menu item data for conditions and evaluating the type of menu item.\n    *\n    * @param {(\n    *    Iterable<import('#standard/component/menu').TJSMenuData.Items> |\n    *    (() => Iterable<import('#standard/component/menu').TJSMenuData.Items>)\n    * )} items - Menu item data of function returning items.\n    *\n    * @returns {object[]} Processed menu items.\n    */\n   static #processItems(items)\n   {\n      let itemList;\n\n      if (typeof items === 'function')\n      {\n         itemList = items();\n\n         if (!isIterable(itemList))\n         {\n            throw new TypeError(`TJSContextMenu error: 'items' function did not return an iterable list.`);\n         }\n      }\n      else\n      {\n         itemList = isIterable(items) ? items : [];\n      }\n\n      const tempItems = [];\n\n      let cntr = -1;\n\n      for (const item of itemList)\n      {\n         cntr++;\n         if (!isObject(item)) { throw new TypeError(`TJSContextMenu error: 'item[${cntr}]' is not an object.`); }\n\n         // Filter items for any condition that prevents display.\n         if (typeof item.condition === 'function' && !item.condition()) { continue; }\n         if (typeof item.condition === 'boolean' && !item.condition) { continue; }\n\n         let type;\n\n         if (TJSSvelte.config.isConfigEmbed(item?.svelte)) { type = 'class'; }\n         else if (typeof item.icon === 'string')\n         {\n            const result = AssetValidator.parseMedia({ url: item.icon, mediaTypes: AssetValidator.MediaTypes.img_svg });\n            type = result.valid ? result.elementType : 'font';\n         }\n         else if (item.icon === void 0 && typeof item.label === 'string') { type = 'label'; }\n         else if (typeof item.separator === 'string')\n         {\n            if (item.separator !== 'hr')\n            {\n               throw new Error(\n                `TJSContextMenu error: 'item[${cntr}]' has unknown separator type; only 'hr' is currently supported.`);\n            }\n\n            type = 'separator-hr';\n         }\n\n         if (type === void 0) { throw new TypeError(`TJSContextMenu error: Unknown type for 'item[${cntr}]'.`); }\n\n         tempItems.push({ ...item, '#type': type });\n      }\n\n      return tempItems;\n   }\n}\n"],"names":[],"mappings":";;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM;AACb;AACA;AACA;AACA;AACA,GAAG,OAAO,YAAY,GAAG,MAAM;;AAE/B;AACA;AACA;AACA,GAAG,WAAW;AACd,GAAG;AACH,MAAM,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC;AAC1G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,mBAAmB,GAAG,KAAK,EAAE,OAAO,GAAG,EAAE;AAC1G,IAAI,UAAU,GAAG,KAAK,EAAE,OAAO,EAAE,OAAO,GAAG,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAiB,GAAG,KAAK,EAAE,MAAM,EAAE,QAAQ,GAAG,GAAG;AACvH,KAAK,MAAM,EAAE,YAAY,EAAE;AAC3B,GAAG;AACH,MAAM,IAAI,cAAc,CAAC,YAAY,KAAK,MAAM,EAAE,EAAE,OAAO;;AAE3D;AACA,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC;AAClE,MAAM;AACN,SAAS,MAAM,IAAI,SAAS;AAC5B,UAAU,CAAC,yFAAyF,CAAC,CAAC;AACtG;;AAEA,MAAM,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC;AACpE,MAAM;AACN,SAAS,MAAM,IAAI,KAAK,CAAC,CAAC,6EAA6E,CAAC,CAAC;AACzG;;AAEA,MAAM,IAAI,OAAO,mBAAmB,KAAK,SAAS;AAClD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,oEAAoE,CAAC,CAAC;AACpG;;AAEA,MAAM,IAAI,mBAAmB,KAAK,IAAI,IAAI,CAAC,KAAK;AAChD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS;AAC5B,UAAU,CAAC,8FAA8F,CAAC,CAAC;AAC3G;;AAEA,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,GAAG,CAAC;AACjD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,8DAA8D,CAAC,CAAC;AAC9F;;AAEA,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,OAAO,GAAG,CAAC;AACjD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,8DAA8D,CAAC,CAAC;AAC9F;;AAEA,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,QAAQ,GAAG,CAAC;AACrD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,kEAAkE,CAAC,CAAC;AAClG;;AAEA;AACA,MAAM,IAAI,YAAY,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,EAAE,EAAE,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;AAErG,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC;AAC7C,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,4DAA4D,CAAC,CAAC;AAC5F;;AAEA,MAAM,IAAI,OAAO,EAAE,KAAK,QAAQ;AAChC,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,kDAAkD,CAAC,CAAC;AAClF;;AAEA,MAAM,IAAI,OAAO,KAAK,MAAM,IAAI,OAAO,OAAO,KAAK,UAAU;AAC7D,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,yDAAyD,CAAC,CAAC;AACzF;;AAEA,MAAM,IAAI,OAAO,iBAAiB,KAAK,SAAS;AAChD,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,kEAAkE,CAAC,CAAC;AAClG;;AAEA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;AAC9B,MAAM;AACN,SAAS,MAAM,IAAI,SAAS,CAAC,CAAC,gEAAgE,CAAC,CAAC;AAChG;;AAEA,MAAM,MAAM,cAAc,GAAG,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC;;AAEhE;AACA,MAAM,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,OAAO;;AAEhD,MAAM,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC;;AAE3G;AACA;AACA,MAAM,IAAI,cAAc,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC;;AAE/C,MAAM,IAAI,mBAAmB;AAC7B,MAAM;AACN,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5G;;AAEA,MAAM,MAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC;;AAEhG,MAAM,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;;AAEhE;AACA,MAAM,MAAM,aAAa,GAAG,aAAa,CAAC,mBAAmB,CAAC;AAC9D,SAAS,OAAO,EAAE,KAAK,EAAE,MAAM;AAC/B,SAAS,MAAM,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC;AACjC,SAAS,QAAQ,EAAE,KAAK;AACxB,SAAS,MAAM,EAAE;AACjB,OAAO,CAAC;;AAER;AACA,MAAM,cAAc,CAAC,YAAY,GAAG,IAAI,kBAAkB,CAAC;AAC3D,SAAS,MAAM,EAAE,YAAY,CAAC,QAAQ,CAAC,IAAI;AAC3C,SAAS,KAAK,EAAE,IAAI;AACpB,SAAS,KAAK,EAAE;AAChB,YAAY,CAAC,EAAE,WAAW,CAAC,CAAC;AAC5B,YAAY,CAAC,EAAE,WAAW,CAAC,CAAC;AAC5B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,KAAK,EAAE,cAAc;AACjC,YAAY,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;AAC9C,YAAY,WAAW;AACvB,YAAY,OAAO;AACnB,YAAY,EAAE;AACd,YAAY,MAAM;AAClB,YAAY,iBAAiB,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;AAC7D,YAAY,YAAY;AACxB,YAAY,iBAAiB;AAC7B,YAAY,cAAc;AAC1B,YAAY;AACZ;AACA,OAAO,CAAC;;AAER,MAAM,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,cAAc,CAAC,YAAY,EAAE,CAAC;;AAE1F;AACA;AACA,MAAM,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,mBAAmB,EAAE;AAC3D,MAAM;AACN,SAAS,cAAc,CAAC,YAAY,GAAG,MAAM;;AAE7C,SAAS,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC;AACxD,OAAO,CAAC;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,wBAAwB,CAAC,KAAK,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;AAC5D,GAAG;AACH,MAAM,IAAI,cAAc,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,OAAO,EAAE,OAAO;;AAEjE,MAAM,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,aAAa,IAAI,KAAK,EAAE,MAAM,GAAG,qBAAqB,IAAI;;AAErF,MAAM,IAAI,IAAI;AACd,MAAM;AACN,SAAS,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO;AACnD,SAAS,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO;AACrD,SAAS,cAAc,GAAG,IAAI,CAAC,MAAM;AACrC,SAAS,aAAa,GAAG,IAAI,CAAC,KAAK;AACnC;;AAEA;AACA,MAAM,OAAO,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,OAAO,aAAa,CAAC,KAAK;AAC7B,GAAG;AACH,MAAM,IAAI,QAAQ;;AAElB,MAAM,IAAI,OAAO,KAAK,KAAK,UAAU;AACrC,MAAM;AACN,SAAS,QAAQ,GAAG,KAAK,EAAE;;AAE3B,SAAS,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AAClC,SAAS;AACT,YAAY,MAAM,IAAI,SAAS,CAAC,CAAC,uEAAuE,CAAC,CAAC;AAC1G;AACA;AACA;AACA,MAAM;AACN,SAAS,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;AAClD;;AAEA,MAAM,MAAM,SAAS,GAAG,EAAE;;AAE1B,MAAM,IAAI,IAAI,GAAG,EAAE;;AAEnB,MAAM,KAAK,MAAM,IAAI,IAAI,QAAQ;AACjC,MAAM;AACN,SAAS,IAAI,EAAE;AACf,SAAS,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;;AAE/G;AACA,SAAS,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,SAAS;AACnF,SAAS,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,SAAS;;AAEhF,SAAS,IAAI,IAAI;;AAEjB,SAAS,IAAI,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAG,OAAO,CAAC;AAC5E,cAAc,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ;AAC/C,SAAS;AACT,YAAY,MAAM,MAAM,GAAG,cAAc,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AACvH,YAAY,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM;AAC7D;AACA,cAAc,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE,EAAE,IAAI,GAAG,OAAO,CAAC;AAC3F,cAAc,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ;AACpD,SAAS;AACT,YAAY,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;AACvC,YAAY;AACZ,eAAe,MAAM,IAAI,KAAK;AAC9B,gBAAgB,CAAC,4BAA4B,EAAE,IAAI,CAAC,gEAAgE,CAAC,CAAC;AACtH;;AAEA,YAAY,IAAI,GAAG,cAAc;AACjC;;AAEA,SAAS,IAAI,IAAI,KAAK,MAAM,EAAE,EAAE,MAAM,IAAI,SAAS,CAAC,CAAC,6CAA6C,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;AAE/G,SAAS,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACnD;;AAEA,MAAM,OAAO,SAAS;AACtB;AACA;;;;"}